(define (cube x)
  (* x x x))

(define (sigma-sum term next a b)
  (if (> a b)
      0
      (+ (term a)
         (sigma-sum term next (next a) b))))

(define (simpson-integral f a b n)
  (define h (/ (- a b) n))
  (define (coef k)
    (cond ((or (= k 0) (= k n)) 1)
          ((even? k) 2)
          ((odd? k) 4)))
  (define (y k)
    (f (+ a (* k h))))
  (define (term k)
    (* (y k) (coef k)))
  (define (next k)
    (+ k 1))
  (* (/ h 3) (sigma-sum term next 0 n)))

(newline)
(display (simpson-integral cube (exact->inexact 0) 1 100))
(newline)
(display (simpson-integral cube (exact->inexact 0) 1 1000))
