(define (cons a b) (cons1 a b 1))
(define (cons1 a b x)
  (cond ((and (= a 0) (= b 0)) x)
        ((and (= a 0) (> b 0)) (cons1 a (- b 1) (* 3 x)))
        ((and (> a 0) (> b 0)) (cons1 (- a 1) b (* 2 x)))
        (else (error "This is an error" a b))))

(define (car z)
  (if (= 0 (remainder z 2))
      (+ 1 (car (/ z 2)))
      0))

(define (cdr z)
  (if (= 0 (remainder z 3))
      (+ 1 (cdr (/ z 3)))
      0))
